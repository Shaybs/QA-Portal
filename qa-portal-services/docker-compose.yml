version: '3.7'
services:  

    postgres:
      image: postgres
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=qa-portal
      volumes:
        - db-data:/var/lib/postgresql/data/
      ports:
        - "5434:5432"

    keycloak:
      image: jboss/keycloak
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: qa-portal
        DB_USER: postgres
        DB_SCHEMA: public
        DB_PASSWORD: postgres
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is ju$
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8080:8080
      depends_on:
        - postgres

    mongo:
      image: mongo
      environment:
      - MONGO_INITDB_DATABASE=qa-portal
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      volumes:
      - ./mongo-data:/data/db
      ports:
      - 27019:27017

    ui:
      build: 
        context: /home/hrvwnd/Documents/git/QA-Portal/qa-portal-angular
        dockerfile: Dockerfile
      volumes:
      - type: bind
        source: ../qa-portal-angular/nginx.conf
        target: /etc/nginx/nginx.conf
      ports:
        - target: 80
          published: 80
          protocol: tcp  

    portal-app-api:
      build: 
        context: ./
        args: 
          - PROJECT=portal-application-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

    cohort-api:
      build: 
        context: ./
        args: 
          - PROJECT=cohort-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

    cv-api:
      build: 
        context: ./
        args: 
          - PROJECT=cv-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      - mongo
      
    feedback-api:
      build: 
        context: ./
        args: 
          - PROJECT=feedback-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      
    form-api:
      build: 
        context: ./
        args: 
          - PROJECT=form-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      
    self-reflection-api:
      build: 
        context: .
        args: 
          - PROJECT=self-reflection-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

volumes:
  db-data:
    driver: local
  mongo-data:     
