version: '3.7'
services:  

    postgres:
      image: postgres
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=qa-portal
      volumes:
        - db-data:/var/lib/postgresql/data/
      ports:
        - "5433:5432"

    keycloak:
      image: jboss/keycloak:6.0.1
      environment:
        - DB_VENDOR=POSTGRES
        - DB_ADDR=postgres
        - DB_DATABASE=qa-portal
        - DB_USER=postgres
        - DB_SCHEMA=public
        - DB_PASSWORD=postgres
        - KEYCLOAK_USER=admin
        - KEYCLOAK_PASSWORD=admin
        - PROXY_ADDRESS_FORWARDING=true
        - KEYCLOAK_IMPORT=/tmp/realm.json
      volumes:
        - type: bind
          source: ./qa-portal-infra/keycloak/exported_realms/qa-portal-realm.json
          target: /tmp/realm.json
      ports:
        - 8080:8080
      depends_on:
        - postgres

    mongo:
      image: mongo
      environment:
      - MONGO_INITDB_DATABASE=qa-portal
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      volumes:
      - ./mongo-data:/data/db
      ports:
      - 27019:27017
    
    nginx:
      image: nginx:alpine
      volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
      depends_on:
      - keycloak
      - portal-app-api
      - ui
      - cohort-api
      - cv-api
      - feedback-api
      - self-reflection-api
      - form-api
      ports:
        - 80:80

    ui:
      build: 
        context: ./qa-portal-angular
        dockerfile: Dockerfile

    portal-app-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=portal-application-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

    cohort-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=cohort-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

    cv-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=cv-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      - mongo
      
    feedback-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=feedback-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      
    form-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=form-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres
      
    self-reflection-api:
      build: 
        context: ./qa-portal-services
        args: 
          - PROJECT=self-reflection-api
        dockerfile: Dockerfile
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-portal
      - POSTGRES_HOST=postgres
      - ENABLE_PUBLIC_ENDPOINTS=true
      depends_on:
      - postgres

volumes:
  db-data:
    driver: local
  mongo-data:     
